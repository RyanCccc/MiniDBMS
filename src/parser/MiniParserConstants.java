/* Generated By:JavaCC: Do not edit this line. MiniParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int KW_AND = 6;
  /** RegularExpression Id. */
  int KW_OR = 7;
  /** RegularExpression Id. */
  int KW_CREATE = 8;
  /** RegularExpression Id. */
  int KW_CHECK = 9;
  /** RegularExpression Id. */
  int KW_PRIMARY = 10;
  /** RegularExpression Id. */
  int KW_FOREIGN = 11;
  /** RegularExpression Id. */
  int KW_KEY = 12;
  /** RegularExpression Id. */
  int KW_REFERENCES = 13;
  /** RegularExpression Id. */
  int KW_DROP = 14;
  /** RegularExpression Id. */
  int KW_TABLE = 15;
  /** RegularExpression Id. */
  int KW_SELECT = 16;
  /** RegularExpression Id. */
  int KW_FROM = 17;
  /** RegularExpression Id. */
  int KW_WHERE = 18;
  /** RegularExpression Id. */
  int KW_INSERT = 19;
  /** RegularExpression Id. */
  int KW_INTO = 20;
  /** RegularExpression Id. */
  int KW_VALUES = 21;
  /** RegularExpression Id. */
  int KW_DELETE = 22;
  /** RegularExpression Id. */
  int KW_UPDATE = 23;
  /** RegularExpression Id. */
  int KW_SET = 24;
  /** RegularExpression Id. */
  int KW_HELP = 25;
  /** RegularExpression Id. */
  int KW_TABLES = 26;
  /** RegularExpression Id. */
  int KW_DESCRIBE = 27;
  /** RegularExpression Id. */
  int KW_QUIT = 28;
  /** RegularExpression Id. */
  int KW_USER = 29;
  /** RegularExpression Id. */
  int KW_USERA = 30;
  /** RegularExpression Id. */
  int KW_USERB = 31;
  /** RegularExpression Id. */
  int KW_SUBSCHEMA = 32;
  /** RegularExpression Id. */
  int KW_INT = 33;
  /** RegularExpression Id. */
  int KW_CHAR = 34;
  /** RegularExpression Id. */
  int KW_DECIMAL = 35;
  /** RegularExpression Id. */
  int SYM_PLUS = 36;
  /** RegularExpression Id. */
  int SYM_MINUS = 37;
  /** RegularExpression Id. */
  int SYM_STAR = 38;
  /** RegularExpression Id. */
  int SYM_SLASH = 39;
  /** RegularExpression Id. */
  int SYM_EQUAL = 40;
  /** RegularExpression Id. */
  int SYM_EXCLEQUAL = 41;
  /** RegularExpression Id. */
  int SYM_LESS = 42;
  /** RegularExpression Id. */
  int SYM_MORE = 43;
  /** RegularExpression Id. */
  int SYM_LESSEQUAL = 44;
  /** RegularExpression Id. */
  int SYM_MOREEQUAL = 45;
  /** RegularExpression Id. */
  int IDENTIFIER = 46;
  /** RegularExpression Id. */
  int INT_LITERAL = 47;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 48;
  /** RegularExpression Id. */
  int STRING_LITERAL = 49;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\f\"",
    "\"\\r\"",
    "\"AND\"",
    "\"OR\"",
    "\"CREATE\"",
    "\"CHECK\"",
    "\"PRIMARY\"",
    "\"FOREIGN\"",
    "\"KEY\"",
    "\"REFERENCES\"",
    "\"DROP\"",
    "\"TABLE\"",
    "\"SELECT\"",
    "\"FROM\"",
    "\"WHERE\"",
    "\"INSERT\"",
    "\"INTO\"",
    "\"VALUES\"",
    "\"DELETE\"",
    "\"UPDATE\"",
    "\"SET\"",
    "\"HELP\"",
    "\"TABLES\"",
    "\"DESCRIBE\"",
    "\"QUIT\"",
    "\"USER\"",
    "\"USER-A\"",
    "\"USER-B\"",
    "\"SUBSCHEMA\"",
    "\"int\"",
    "\"char\"",
    "\"decimal\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "<IDENTIFIER>",
    "<INT_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<STRING_LITERAL>",
    "\";\"",
    "\"(\"",
    "\",\"",
    "\")\"",
  };

}
